name: Deploy (self-hosted)

on:
  push:
    branches: [ "main" ]        # staging automático
  workflow_dispatch:             # produção manual (por enquanto)

env:
  IMAGE_NAME: ghcr.io/georgeluch/ecotrack
  DEPLOY_DIR: 'D:\Eco para CI CD\EcoTrack.api (2)\EcoTrack.api'

jobs:
  staging:
    if: ${{ github.ref_name == 'main' }}
    runs-on: self-hosted
    steps:
      - name: (Opcional) Login GHCR se secrets existirem
        if: ${{ secrets.GHCR_PAT != '' }}
        shell: cmd
        run: |
          echo %GHCR_PAT% | docker login ghcr.io -u %GHCR_USERNAME% --password-stdin
        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}

      - name: Pull/Up Staging (5001)
        shell: cmd
        run: |
          cd /d "%DEPLOY_DIR%"
          docker pull %IMAGE_NAME%:latest
          docker compose -f docker-compose.deploy.staging.yml pull
          docker compose -f docker-compose.deploy.staging.yml up -d
          docker compose -f docker-compose.deploy.staging.yml ps

  prod:
    runs-on: self-hosted
    steps:
      - name: (Opcional) Login GHCR se secrets existirem
        if: ${{ secrets.GHCR_PAT != '' }}
        shell: cmd
        run: |
          echo %GHCR_PAT% | docker login ghcr.io -u %GHCR_USERNAME% --password-stdin
        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}

      - name: Pull/Up Produção (5000)
        shell: cmd
        run: |
          cd /d "%DEPLOY_DIR%"
          docker pull %IMAGE_NAME%:latest
          docker compose -f docker-compose.deploy.yml pull
          docker compose -f docker-compose.deploy.yml up -d
          docker compose -f docker-compose.deploy.yml ps
